% choose an image for processing
a= imread('ppv.jpg');
a=rgb2gray(a);
actual=a;

% defining my filter
gx=[-1,-2,-1;0,0,0;1,2,1];
gy=[-1,0,1;-2,0,2;-1,0,1];

% making a padded image
[r,c]=size(a);
na=zeros(r+2,c+2);
for i=2:1:r+1
    for j=2:1:c+1
        na(i,j)=a(i-1,j-1);
    end
end
a=na;

na1=zeros(r+2,c+2);
na2=zeros(r+2,c+2);
% applying the filter gx
for i=2:1:r+1
    for j=2:1:c+1
        % used ellipsis for multiple line long statements
        % used round(X,N) for rounfing off
        na1(i,j)=        a(i-1,j-1) *gx(1,1) +...
                        a(i,j-1)   *gx(1,2) +...
                        a(i+1,j-1) *gx(1,3) +...
                        ...
                        a(i-1,j)   *gx(2,1) +...
                        a(i,j)     *gx(2,2) +...
                        a(i+1,j)   *gx(2,3) +... 
                        ...
                        a(i-1,j+1) *gx(3,1) +...
                        a(i,j+1)   *gx(3,2) +...
                        a(i+1,j+1) *gx(3,3);
    end
end

% applying the filter gx
for i=2:1:r+1
    for j=2:1:c+1
        % used ellipsis for multiple line long statements
        % used round(X,N) for rounfing off
        na2(i,j)=        a(i-1,j-1) *gy(1,1) +...
                        a(i,j-1)   *gy(1,2) +...
                        a(i+1,j-1) *gy(1,3) +...
                        ...
                        a(i-1,j)   *gy(2,1) +...
                        a(i,j)     *gy(2,2) +...
                        a(i+1,j)   *gy(2,3) +... 
                        ...
                        a(i-1,j+1) *gy(3,1) +...
                        a(i,j+1)   *gy(3,2) +...
                        a(i+1,j+1) *gy(3,3);
    end
end

na1=uint8(na1);
na2=uint8(na2);
subplot(1,3,1); imshow(actual); title('actualImageBeforeApplyingSobelFilter');
subplot(1,3,2); imshow(na1); title('VerticalEdgeDetection');
subplot(1,3,3); imshow(na2); title('HorizontalEdgeDetection');